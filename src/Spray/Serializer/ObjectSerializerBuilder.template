<?php echo '<?php'; ?>

<?php if ($reflection->inNamespace()): ?>
namespace <?php echo $reflection->getNamespaceName(); ?>;
<?php endif; ?>

use Spray\Serializer\AbstractObjectSerializer;
use Spray\Serializer\SerializerInterface;

class <?php echo $reflection->getShortName() ?>Serializer extends AbstractObjectSerializer
{
    public function __construct()
    {
        parent::__construct(
            function($subject, array &$data, SerializerInterface $serializer) {
<?php foreach ($properties as $property): ?>
<?php if ($this->isTargetObject($property)): ?>
                $data['<?php echo $property->getName() ?>'] = $serializer->serialize($subject-><?php echo $property->getName() ?>);
<?php else: ?>
                $data['<?php echo $property->getName() ?>'] = $subject-><?php echo $property->getName() ?>;
<?php endif; ?>
<?php endforeach ?>
            },
            function($subject, array &$data, SerializerInterface $serializer) {
<?php foreach ($properties as $property): ?>
<?php if ($this->isTargetObject($property)): ?>
                $subject-><?php echo $property->getName() ?> = $serializer->deserialize('<?php echo $this->getTargetClass($property) ?>', $data['<?php echo $property->getName() ?>']);
<?php else: ?>
                $subject-><?php echo $property->getName() ?> = $data['<?php echo $property->getName() ?>'];
<?php endif; ?>
<?php endforeach ?>
            },
            '<?php echo $reflection->getName(); ?>'
        );
    }
}
